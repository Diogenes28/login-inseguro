# Nome do workflow que aparecer√° na aba "Actions" do GitHub
name: Veracode Upload Scan

# Define quando esse workflow ser√° executado.
# Neste caso, ele ser√° executado manualmente atrav√©s do bot√£o "Run workflow" no GitHub.
on:
  workflow_dispatch:

jobs:
  # Nome do job (conjunto de etapas que rodam em sequ√™ncia)
  upload_scan:
    # Ambiente onde o job ser√° executado. "ubuntu-latest" √© uma m√°quina virtual Linux preparada pelo GitHub.
    runs-on: ubuntu-latest

    steps:
      # Etapa para baixar o c√≥digo-fonte do reposit√≥rio na m√°quina virtual.
      # Isso √© necess√°rio para que as pr√≥ximas etapas possam acessar os arquivos do projeto.
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3

      # Esta etapa cria um arquivo ZIP com todo o c√≥digo do projeto.
      # O comando `zip -r` compacta recursivamente todos os arquivos da pasta atual (.)
      # Os par√¢metros `-x ".git/*" ".github/*"` servem para **excluir** a pasta `.git` e a pasta `.github` do ZIP,
      # pois esses arquivos n√£o s√£o necess√°rios para a an√°lise de seguran√ßa.
      - name: Criar pacote ZIP do c√≥digo PHP
        run: zip -r login-inseguro.zip . -x ".git/*" ".github/*"

      # Etapa para executar a an√°lise SCA (Software Composition Analysis)
      # que verifica vulnerabilidades em bibliotecas e depend√™ncias do projeto.
      - name: Run Veracode SCA
        uses: veracode/veracode-sca@v2.1.9
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}

      # Etapa opcional: listar todos os arquivos gerados no workspace
      # Isso ajuda a identificar onde o Veracode SCA salvou o relat√≥rio JSON.
      - name: Listar arquivos gerados
        run: |
          echo "üìÇ Listando todos os arquivos gerados ap√≥s o scan SCA:"
          ls -la
          echo "üîç Listagem recursiva (procure por arquivos .json, .log, ou 'sca'):"
          ls -laR || true

      # Etapa para salvar os resultados do Veracode SCA como artifact no GitHub
      # Isso permite baixar o relat√≥rio diretamente na aba 'Actions' ‚Üí 'Artifacts'
      - name: Upload Veracode SCA Results
        uses: actions/upload-artifact@v3
        with:
          # Nome que aparecer√° no painel do GitHub
          name: Veracode_SCA_Results
          # Caminho gen√©rico que tenta capturar qualquer relat√≥rio com "sca" ou "report" no nome
          path: '**/*sca*report*.json'
          # Quantos dias o arquivo ficar√° dispon√≠vel para download no GitHub
          retention-days: 30

      # Esta etapa envia o arquivo ZIP com o c√≥digo para a plataforma Veracode
      # e inicia uma varredura de seguran√ßa (scan) automaticamente.
      - name: Veracode Upload & Scan
        # A√ß√£o oficial da Veracode para fazer upload e scan do c√≥digo
        uses: veracode/veracode-uploadandscan-action@0.2.6
        with:
          # Nome da aplica√ß√£o na Veracode. Se ela ainda n√£o existir, ser√° criada automaticamente.
          appname: "login-inseguro"
          
          # Define se a a√ß√£o deve criar um perfil de aplica√ß√£o automaticamente se ele ainda n√£o existir.
          createprofile: true

          # Caminho do arquivo ZIP que ser√° enviado para an√°lise.
          filepath: "login-inseguro.zip"

          # Vers√£o da aplica√ß√£o sendo enviada. Usamos `github.run_number` para gerar um n√∫mero de vers√£o autom√°tico,
          # que aumenta a cada nova execu√ß√£o do workflow (ex: 1.0.1, 1.0.2...).
          version: "1.0.${{ github.run_number }}"

          # Credenciais de API da Veracode, armazenadas com seguran√ßa como "secrets" no GitHub.
          # Esses valores devem ser criados na √°rea de *Settings > Secrets and variables > Actions* do seu reposit√≥rio.
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
