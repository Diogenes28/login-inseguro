name: Veracode Pipeline Scan

# Dispara automaticamente ao fazer push na branch main
on:
  push:
    branches: [main]

jobs:
  pipeline_scan:
    runs-on: ubuntu-latest  # Execução na nuvem (máquina do GitHub)

    steps:
      # Clona o código do repositório
      - name: Checkout do repositório
        uses: actions/checkout@v3

      # Compacta o projeto (exclui a pasta .github para não ser analisada)
      - name: Compactar projeto para envio ao Veracode
        run: zip -r login-inseguro.zip . -x '*.github/*'

      # Executa o Veracode Pipeline Scan
      - name: Executar Veracode Pipeline Scan
        uses: veracode/Veracode-pipeline-scan-action@d5dbb47cb0202d511be5fd10a04071d32f74ace6
        with:
          vid: ${{ secrets.VERACODE_API_ID }}       #  ID da API Veracode
          vkey: ${{ secrets.VERACODE_API_KEY }}     #  Chave da API Veracode
          file: login-inseguro.zip                  #  Arquivo compactado com o código
          debug: true                               #  Ativa modo de depuração

      # Converte o JSON gerado em SARIF (formato usado pelo GitHub Code Scanning)
      - name: Converter JSON para SARIF
        uses: veracode/veracode-pipeline-scan-results-to-sarif@ff08ae5b45d5384cb4679932f184c013d34da9be
        with:
          file: results.json        # Entrada: JSON gerado pelo Veracode
          fail_build: false         # Não falha o build, mesmo com vulnerabilidades

      #  Envia o relatório SARIF para o GitHub Code Scanning
      - name: Enviar SARIF para Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: veracode-results.sarif  # Nome correto do arquivo SARIF gerado
